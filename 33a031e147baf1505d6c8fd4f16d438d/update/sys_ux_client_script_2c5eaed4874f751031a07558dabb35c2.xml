<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <controller_preset/>
        <includes/>
        <macroponent display_value="Deliverable Record Page">d80f6dbd473a75505d6c8fd4f16d437d</macroponent>
        <name>Check Completeness</name>
        <preset/>
        <required_translations>[
    
]</required_translations>
        <script><![CDATA[/**
* @param {params} params
* @param {api} params.api
* @param {any} params.event
* @param {any} params.imports
* @param {ApiHelpers} params.helpers
*/
function handler({api, event, helpers, imports}) {
    console.log("***check completeness***");
    var local_ans = api.state.assmtQuestionList;
    //var local_list = local_ans[0].questionList;
    var answerCount = local_ans[0].questionList.length;
    //console.log("answer count: " + answerCount);
    var ansComplete = true;
    var running_score = 0;
    var total_points = 0;
    var score = 0;    

    for (let i = 0; i < answerCount; i++) {
        var response = local_ans[0].questionList[i].response;
        //console.log("response: " + response);
        if (!response){
            ansComplete = false;
        }

        running_score = running_score + parseInt(local_ans[0].questionList[i].value);
        total_points = total_points + parseInt(local_ans[0].questionList[i].points);
        if (total_points ==0){
            score = 0;
        }else{
            score = running_score/total_points*100;
        }
        
        //console.log("running score: " + running_score);
        //console.log("total points: " + total_points);
        //console.log("score: " + score);
    }

    local_ans[0].score = score;
    //console.log("local score: " + local_ans[0].score);

    //check summary
    var summary = local_ans[0].summary;
    //console.log("local summary: " + summary);
    if (summary===null || summary.length==0){
        ansComplete = false;
    }

    var rec = api.state.revRec;
    if (rec===null || rec==="undefined") {
        ansComplete = false;
    }

    console.log("ans complete: " + ansComplete);

    api.setState("answersComplete", ansComplete);
    api.setState("assmtQuestionList", local_ans);
    api.setState("score", score);
    //console.log("after set state score ");
    //console.log("statescore : " + api.state.score);
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>kate.flood</sys_created_by>
        <sys_created_on>2023-12-07 18:57:28</sys_created_on>
        <sys_id>2c5eaed4874f751031a07558dabb35c2</sys_id>
        <sys_mod_count>73</sys_mod_count>
        <sys_name>Check Completeness</sys_name>
        <sys_package display_value="Award Program Management" source="x_snc_award_mgmt">33a031e147baf1505d6c8fd4f16d438d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Award Program Management">33a031e147baf1505d6c8fd4f16d438d</sys_scope>
        <sys_update_name>sys_ux_client_script_2c5eaed4874f751031a07558dabb35c2</sys_update_name>
        <sys_updated_by>kate.flood</sys_updated_by>
        <sys_updated_on>2023-12-12 18:32:48</sys_updated_on>
        <target>macroponent</target>
        <type>default</type>
    </sys_ux_client_script>
</record_update>
